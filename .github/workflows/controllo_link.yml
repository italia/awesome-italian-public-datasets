name: Broken Links Checker
on:
  push:
    branches:
      - master
  schedule:
     - cron: '0 0 1 * *'
env:
  ISSUE_TEMPLATE: ".github/workflows/ISSUE_TEMPLATE.md"
 
  contents: read
  issues: write 
  
jobs:
  check:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Get links from README.md
      id: get-links
      run: |
       LINKS=$(grep -oP '\[.*?\]\((http[s]?://[^)]*)\)' README.md | sed -E 's/\[.*\]\(([^)]+)\)/\1/' | paste -sd "," -)
       echo "WEBSITE_URL=$LINKS" >> $GITHUB_ENV
      
    - name: Run Broken Links Checker
      run: |
        # Dividi la lista di link in un array separato da virgola
        IFS=',' read -ra LINKS <<< "$WEBSITE_URL"
        BROKEN_LINKS=""

        # Scansiona i link e verifica se sono raggiungibili
        for link in "${LINKS[@]}"; do
          if [[ $link =~ ^(http|https):// ]]; then
            # Se il link inizia con "http://" o "https://", verifica se Ã¨ raggiungibile
            if ! curl -IsSk "$link" > /dev/null; then
              BROKEN_LINKS="$BROKEN_LINKS,$link"
            fi
          fi
        done

          # Rimuovi la virgola iniziale se ci sono link non raggiungibili
        if [ -n "$BROKEN_LINKS" ]; then
          BROKEN_LINKS=$(echo "$BROKEN_LINKS" | cut -c 2-)
          echo "BROKEN_LINKS=$BROKEN_LINKS" >> $GITHUB_ENV
          echo "Broken links found: $BROKEN_LINKS"
          echo "Broken links found, failing the workflow"
          exit 1
        else
          echo "No broken links found"
        fi

  

    - uses: actions/checkout@v3
      if: failure()

    - uses: JasonEtco/create-an-issue@v2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        filename: ${{ env.ISSUE_TEMPLATE }}
      if: failure()
