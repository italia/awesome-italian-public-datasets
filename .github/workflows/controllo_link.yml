name: Broken Links Checker
on:
  push:
    branches:
      - Controllo_automatico_dei_link_rotti
env:
  ISSUE_TEMPLATE: ".github/workflows/ISSUE_TEMPLATE.md"
 
  contents: read
  issues: write 
  
jobs:
  check:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Get links from README.md
      id: get-links
      run: |
       LINKS=$(grep -oP '\[.*?\]\((http[s]?://[^)]*)\)' README.md | sed -E 's/\[.*\]\(([^)]+)\)/\1/' | paste -sd "," -)
       echo "WEBSITE_URL=$LINKS" >> $GITHUB_ENV
      
    - name: Check Broken Links
      run: |
        BROKEN_LINKS=""
        while IFS= read -r line; do
        status=$(curl -o /dev/null -s -w "%{http_code}" "$line")
        if [ "$status" -ge 400 ]; then
         echo "Broken link found: $line"
         BROKEN_LINKS="$BROKEN_LINKS$line "
        fi
        done < <(grep -oP '\[(.*?)\]\((http[s]?://.*?)\)' README.md | sed -E 's/\[.*\]\((http[s]?://.*?)\)/\1/')
        echo "BROKEN_LINKS=$BROKEN_LINKS" >> $GITHUB_ENV
        echo "Broken links found: $BROKEN_LINKS"
        if [ -n "$BROKEN_LINKS" ]; then
          echo "Broken links found, failing the workflow"
          exit 1
        fi

  

    - uses: actions/checkout@v3
      if: failure()

    - uses: JasonEtco/create-an-issue@v2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        filename: ${{ env.ISSUE_TEMPLATE }}
      if: failure()
